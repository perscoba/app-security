name: Example workflow for app security SAST, SCA, IAST, DAST

on: [push, pull_request]
permissions:
  security-events: write
  actions: read
  contents: read
jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push images
        run: |
          services="assets cart catalog checkout orders ui"
          for service in $services; do
            image="perscoba/appsec-revive-${service}:latest"
            echo "ðŸ”§ Building $service"
            docker build -t $image ./$service
            echo "ðŸš€ Pushing $image"
            docker push $image
          done

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (required for Snyk CLI)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Test
        run: snyk test --all-projects --sarif-file-output=snyk.sarif
        continue-on-error: true  # Prevents the job from failing on vulnerabilities

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      - name: Run Nginx
        run: docker run --rm --detach --publish 8080:80 --name nginx_test nginx
      - name: Run HawkScan
        uses: stackhawk/hawkscan-action@v2
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
